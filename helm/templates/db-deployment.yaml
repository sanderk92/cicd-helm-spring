apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo.fullname" . }}-db
  labels:
    {{- include "demo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "demo.dbSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "demo.dbSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "demo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: database-persistence
          persistentVolumeClaim:
            claimName: {{ include "demo.fullname" . }}-db-pvc
      containers:
        - name: {{ .Chart.Name }}-influxdb
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.db.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ .Release.Name }}-db-secrets
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Release.Name }}-db-secrets
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: org
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: database
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              value: admin
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: database-persistence

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
